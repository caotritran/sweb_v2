---
- name: extract libbrary openssl
  unarchive:
    src: '{{source_dir}}/{{ openssl }}'
    dest: '{{source_dir}}'
    remote_src: yes

- name: extract library prce
  unarchive:
    src: '{{source_dir}}/{{ pcre }}'
    dest: '{{source_dir}}'
    remote_src: yes

- name: extract library zlib
  unarchive:
    src: '{{source_dir}}/{{ zlib }}'
    dest: '{{source_dir}}'
    remote_src: yes

- name: extract nginx source
  unarchive:
    src: '{{source_dir}}/{{ nginx }}'
    dest: '{{source_dir}}'
    remote_src: yes

- name: compile Nginx from source
  command: ./configure --user={{ user_ngx }} --group={{ user_ngx }} --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log \
        --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp \
        --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --with-file-aio \
        --with-http_gzip_static_module --with-http_stub_status_module --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module \
        --with-http_gunzip_module --with-http_degradation_module --with-http_perl_module --with-debug --with-http_v2_module --with-http_geoip_module --without-http_empty_gif_module --without-http_browser_module \
        --without-http_uwsgi_module --without-http_scgi_module --with-pcre={{ source_dir }}/pcre2-10.37 --with-zlib={{ source_dir }}/zlib-1.2.12 --with-openssl={{ source_dir }}/openssl-1.1.1s \
        --add-module={{ source_dir }}/nginx-module-vts --add-module={{ source_dir }}/ngx_cache_purge --add-module={{ source_dir }}/testcookie-nginx-module --add-module={{ source_dir }}/headers-more-nginx-module
  args:
    chdir: '{{source_dir}}/{{ nginx_name }}'
  register: nginx_configure

- name: Make install
  shell: make && make install
  args:
    chdir: '{{source_dir}}/{{ nginx_name }}'
  #when: nginx_configure|changed

- name: create user system nginx
  command: useradd -r nginx
  ignore_errors: yes

- name: create starup service file
  copy:
    src: nginx.service
    dest: /lib/systemd/system/nginx.service
    owner: root
    group: root

- name: create folder cache
  shell: mkdir -p /etc/nginx/cache/

- name: create folder temp
  shell: mkdir -p /var/cache/nginx/client_temp

- name: make sure phpmyadmin not downloaded
  shell: rm -rf /etc/nginx/html/php*

- name: download phpmyadmin
  shell: wget https://files.phpmyadmin.net/phpMyAdmin/5.2.0/phpMyAdmin-5.2.0-all-languages.zip -P /etc/nginx/html

- name: unzip file phpmyadmin
  shell: cd /etc/nginx/html/ && unzip phpMyAdmin-5.2.0-all-languages.zip && mv phpMyAdmin-5.2.0-all-languages phpmyadmin
  

- name: copy phpmyadmin config file
  template:
    src: roles/Vhost/templates/phpmyadmin.conf.j2
    dest: /etc/nginx/phpmyadmin.conf
    
- name: copy .htaccess file
  template:
    src: roles/Vhost/files/htpasswd
    dest: /etc/nginx/.htpasswd

- name: start Nginx Service
  service: name=nginx state=started enabled=yes
